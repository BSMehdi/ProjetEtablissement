Note :

Reqûetes supportées : 

Method : get 
URL : http://localhost:8080/note/all
Description : Retourne la liste de toutes les notes, la liste sera null s'il n'y pas de notes.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (liste d'objets de type NoteDto au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)



Method : get 
URL : http://localhost:8080/note/id
Entrée : Dans l'url : Identifiant id (type Number) de la note à rechercher
Description : Retourne la note avec la valeur d'id renseignée. Si l'id renseigné n'existe pas c'est une BadRequest.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (objet de type NoteDto au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)



Method : get 
URL : http://localhost:8080/note/etudiant
Entrée : Dans l'url : Identifiant id (type Number) de l'étudiant dont on veut connaître les notes. Description : Retourne la liste des notes pour l'étudiant dont la valeur d'id est renseignée. Si l'id renseigné n'existe pas c'est une BadRequest.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (liste de NoteDto au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)


Method : post 
URL : http://localhost:8080/note
Entrée : Dans le corps de la reqûete : un Objet NoteDto au format Json : 
Description : Enregistre de façon persistente une note, avec un identifiant autogénéré par incrémentation.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (de type NoteDtoCreate au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)


Method : put 
URL : http://localhost:8080/note
Entrée : Dans le corps de la reqûete : un objet NoteDtoCreate au format Json : 
Description : Modifie dans la base de données la note ayant l'identifiant {id} avec les autres informations fournies. S'il n'existe pas de note avec cet id, c'est une BadRequest.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (null au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)


Method : delete 
URL : http://localhost:8080/note/{id}
Entrée : Dans l'url : Identifiant id (type Number) de la note à supprimer
Description : Supprime la note avec la valeur d'id renseignée, si l'id renseigné n'existe pas, c'est une BadRequest.
Réponse ok : Status 200, corps de requête avec error (false) message ("SUCCESS") et objet (null au format Json).
Réponse non ok : Status 400, corps requête avec error (true) message ("FAIL") et objet (null au format Json)
